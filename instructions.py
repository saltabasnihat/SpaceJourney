from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
from langchain.memory import CassandraChatMessageHistory, ConversationBufferMemory
from langchain.llms import OpenAI
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain
import json
# import time
# import openai


# This secure connect bundle is autogenerated when you donwload your SCB, 
# if yours is different update the file name below
cloud_config= {
  'secure_connect_bundle': 'secure-connect-adventure-game-options.zip'
}

# This token json file is autogenerated when you donwload your token, 
# if yours is different update the file name below
with open("adventure_game_options-token.json") as f:
    secrets = json.load(f)

CLIENT_ID = secrets["clientId"]
CLIENT_SECRET = secrets["secret"]
ASTRA_DB_KEYSPACE = ""
OPENAI_API_KEY = "sk-"

auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
session = cluster.connect()


message_history = CassandraChatMessageHistory(
    session_id = "anything",
    session = session,
    keyspace = ASTRA_DB_KEYSPACE,
    ttl_seconds = 3600
)

message_history.clear()

cass_buff_memory = ConversationBufferMemory(
    memory_key = "chat_history",
    chat_memory= message_history
)

template = """
You are now the guide of an epic space odyssey. A fearless explorer named Alex embarks on a quest to
uncover the mysteries of the Celestial Nebula. Your role is to lead Alex through a series of challenges, choices, and consequences, 
shaping the narrative dynamically based on the traveler's decisions. Your ultimate aim is to create an immersive branching story where each
choice Alex makes leads to a new path, ultimately determining their destiny among the stars.

Here are the rules to follow:

1. Start by asking the player to choose a spacecraft for their journey. This choice will impact their adventure later on.

2. Craft multiple paths that can lead to a successful mission to unravel the secrets of the Celestial Nebula.

3. Introduce perilous paths that may result in Alex's untimely demise. In case of death, provide a descriptive response explaining 
the fate and conclude with the text: "The End." Players can search for this text to end the game.

With these rules in mind, let's embark on this interstellar adventure:

Alex: "I'm ready to choose my spacecraft and begin the journey."
AI: "Excellent, Alex. Your spacecraft options are the sleek 'Stellar Falcon,' the sturdy 'Galactic Voyager,' and the experimental 'Quantum Explorer.' Which one will you choose for your mission to the Celestial Nebula?"

Here is the chat history, use this to understand what to say next: {chat_history}
Human: {human_input}
AI:
"""

prompt = PromptTemplate(
    input_variables = ["chat_history", "human_input"],
    template = template
)

llm = OpenAI(openai_api_key =  OPENAI_API_KEY)
llm_chain = LLMChain(
    llm = llm,
    prompt = prompt,
    memory = cass_buff_memory
)

choice = "start"

while True:
    response = llm_chain.predict(human_input=choice)
    print(response.strip())

    if "The End." in response:
        break

    choice = input("Your reply: ")